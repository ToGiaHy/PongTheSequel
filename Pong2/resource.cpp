#include <map>
#include <vector>
struct Question {
	const char* questionText;
	std::vector<const char*> answerOptions;
	const char* correctAnswer;
};
static std::map<int, Question> questionAlgo = {
		{0, {"WHAT IS THE AVERAGE CASE FOR STACK ?", {"IT IS ONE", "IT IS N", "N SQUARED"}, "ONE"}},
		{1, {"WHAT IS ONE OF THE COMPLEXITY ?", {"TIME", "DIMENSIONS", "GRAVITY"}, "TIME"}},
		{2, {"WHAT IS THE COMPLEXITY FOR THE KNAPSACK ?", {"N SQUARED", "IT IS N", "IT IS ONE"}, "N SQUARED"}},
		{3, {"WHAT IS THE COMPLEXITY FOR DISTRIBUTION ?", {"IT IS N", "IT IS ONE", "N SQUARED"}, "N"}}
};
static std::map<int, Question> questionAlgo1 = {
		{0, {"WHAT IS THE AVERAGE CASE FOR STACK ?", {"IT IS ONE", "IT IS N", "N SQUARED"}, "ONE"}},
		{1, {"WHAT IS ONE OF THE COMPLEXITY ?", {"  TIME", "DIMENSIONS", "GRAVITY"}, "TIME"}}
};
static std::map<int, Question> questionAlgo2 = {
		{0, {"WHAT IS THE COMPLEXITY FOR THE KNAPSACK ?", {"N SQUARED", "IT IS N", "IT IS ONE"}, "N SQUARED"}},
		{1, {"WHAT IS THE COMPLEXITY FOR DISTRIBUTION ?", {"IT IS N", "IT IS ONE", "N SQUARED"}, "N"}}
};
static std::map<int, Question> questionJava = {
		{0, {"WHAT IS THE ENTRY POINT METHOD IN JAVA ?", {"MAIN", "START", "RUN"}, "MAIN"}},
		{1, {"WHAT KEYWORD IS USED TO DEFINE CONSTANT?", {"VAR", "FINAL", "CONST"}, "FINAL"}},
		{2, {"WHAT IS A SUPERCLASS?", {"MAIN", "SUPER", "OBJECT"}, "OBJECT"}},
		{3, {"WHICH KEYWORD IS USED FOR INHERITANCE?", {"EXTENDS", "INHERIT", "GIVEN"}, "EXTENDS"}}
};
static std::map<int, Question> questionBITS = {
		{0, {"TEAMWORK ISSUES THAT CAN HAPPEN", {"UNCLEAR GOALS", "FIST FIGHTING", "STABBING"}, "UNCLEAR GOALS"}},
		{1, {"IS BUDGET A REQUIRED PART OF THE PROPOSAL ?", {"YES", "NO", "MAYBE"}, "MAYBE"}},
		{2, {"WHY DO YOU NEED TO TEST SOFTWARE?", {"FUN", "ENGAGING", "SECURITY"}, "SECURITY"}},
		{3, {"WHAT IS CONDISERED GOOD PRACTICE OF CODING", {"WORD OF MOUTH", "COMMENTS", "MESSENGER"}, "COMMENTS"}}
};
static std::map<int, Question> questionML = {
		{0, {"WHAT IS THE GOAL OF SUPERVISED LEARNING?", {"PREDICTIONS", "PATTERNS", "SUMMARIZE"}, "PREDICTIONS"}},
		{1, {"WHAT IS THE GOAL OF UNSUPERVISED LEARNING?", {"PREDICTIONS", "SUMMARIZE", "PATTERNS"}, "PATTERNS"}},
		{2, {"WHAT TO DO TO EVALUATE CLASSIFICATION?", {"CONFUSION MATRIX", "FEATURE EXTRACTION", "TUNING"}, "CONFUSION MATRIX"}},
		{3, {"WHAT IS ENSEMBLE LEARNING?", {"SINGULAR APPROACH", "MULTIPLE MODELS", "ISOLATION PREDICTIONS"}, "MULTIPLE MODELS"}}
};
static std::map<int, Question> questionHighScore = {
		{0, {"WHAT IS THE AVERAGE CASE FOR STACK ?", {"IT IS ONE", "IT IS N", "N SQUARED"}, "ONE"}},
		{1, {"WHAT IS ONE OF THE COMPLEXITY ? [ALGO]", {"TIME", "DIMENSIONS", "GRAVITY"}, "TIME"}},
		{2, {"WHAT IS THE COMPLEXITY FOR THE KNAPSACK ?", {"N SQUARED", "IT IS N", "IT IS ONE"}, "N SQUARED"}},
		{3, {"WHAT IS THE COMPLEXITY FOR DISTRIBUTION ?", {"IT IS N", "IT IS ONE", "N SQUARED"}, "N"}},
		{4, {"WHAT IS THE ENTRY POINT METHOD IN JAVA ?", {"MAIN", "START", "RUN"}, "MAIN"}},
		{5, {"WHAT KEYWORD IS USED TO DEFINE CONSTANT? [JAVA]", {"VAR", "FINAL", "CONST"}, "FINAL"}},
		{6, {"WHAT IS A SUPERCLASS? [JAVA]", {"MAIN", "SUPER", "OBJECT"}, "OBJECT"}},
		{7, {"WHICH KEYWORD IS USED FOR INHERITANCE? [JAVA]", {"EXTENDS", "INHERIT", "GIVEN"}, "EXTENDS"}},
		{8, {"TEAMWORK ISSUES THAT CAN HAPPEN", {"UNCLEAR GOALS", "FIST FIGHTING", "STABBING"}, "UNCLEAR GOALS"}},
		{9, {"IS BUDGET A REQUIRED PART OF THE PROPOSAL ?", {"YES", "NO", "MAYBE"}, "MAYBE"}},
		{10, {"WHY DO YOU NEED TO TEST SOFTWARE?", {"FUN", "ENGAGING", "SECURITY"}, "SECURITY"}},
		{11, {"WHAT IS CONDISERED GOOD PRACTICE OF CODING", {"WORD OF MOUTH", "COMMENTS", "MESSENGER"}, "COMMENTS"}},
		{12, {"WHAT IS THE GOAL OF SUPERVISED LEARNING?", {"PREDICTIONS", "PATTERNS", "SUMMARIZE"}, "PREDICTIONS"}},
		{13, {"WHAT IS THE GOAL OF UNSUPERVISED LEARNING?", {"PREDICTIONS", "SUMMARIZE", "PATTERNS"}, "PATTERNS"}},
		{14, {"WHAT TO DO TO EVALUATE CLASSIFICATION?", {"CONFUSION MATRIX", "FEATURE EXTRACTION", "TUNING"}, "CONFUSION MATRIX"}},
		{15, {"WHAT IS ENSEMBLE LEARNING?", {"SINGULAR APPROACH", "MULTIPLE MODELS", "ISOLATION PREDICTIONS"}, "MULTIPLE MODELS"}}
};